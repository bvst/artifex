name: Flutter CI/CD

on:
  push:
    branches: [ main ]  # Only run CI when pushing to main branch
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test Flutter App
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: artifex_test
          POSTGRES_USER: artifex_test_user
          POSTGRES_PASSWORD: artifex_test_password
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5433:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd "pg_isready -U artifex_test_user -d artifex_test"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - uses: subosito/flutter-action@v2
      with:
        flutter-version-file: '.flutter-version'
        channel: 'stable'
    
    - name: Get dependencies
      run: |
        flutter pub get
        echo "::group::Dependency Resolution"
        flutter pub deps
        echo "::endgroup::"
    
    - name: Check for outdated dependencies
      run: |
        echo "::group::Outdated Dependencies Report"
        flutter pub outdated || true
        echo "::endgroup::"
    
    - name: Initialize test database
      run: |
        # Wait for PostgreSQL to be ready
        until pg_isready -h localhost -p 5433 -U artifex_test_user -d artifex_test; do
          echo "Waiting for PostgreSQL to be ready..."
          sleep 2
        done
        
        # Initialize database schema
        PGPASSWORD=artifex_test_password psql -h localhost -p 5433 -U artifex_test_user -d artifex_test -f docker/init-test.sql
    
    - name: Analyze code
      run: |
        echo "::group::Flutter Analyze Output"
        flutter analyze --no-fatal-infos --no-fatal-warnings || true
        echo "::endgroup::"
        # Run again to fail on errors only
        flutter analyze
    
    - name: Run tests (including integration tests)
      run: flutter test
      env:
        # Ensure tests can connect to the PostgreSQL service
        POSTGRES_TEST_HOST: localhost
        POSTGRES_TEST_PORT: 5433
        POSTGRES_TEST_DB: artifex_test
        POSTGRES_TEST_USER: artifex_test_user
        POSTGRES_TEST_PASSWORD: artifex_test_password

  build-android:
    name: Build Android APK
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - uses: subosito/flutter-action@v2
      with:
        flutter-version-file: '.flutter-version'
        channel: 'stable'
    
    - name: Get dependencies
      run: flutter pub get
    
    - name: Build APK
      run: |
        echo "::group::Building Android APK"
        flutter build apk --release --verbose 2>&1 | grep -E "(warning|deprecated|info:|WARNING|DEPRECATED)" || true
        echo "::endgroup::"
        # Build again without verbose to ensure it succeeds
        flutter build apk --release
    
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-release
        path: build/app/outputs/flutter-apk/app-release.apk

  build-ios:
    name: Build iOS App
    needs: test
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: subosito/flutter-action@v2
      with:
        flutter-version-file: '.flutter-version'
        channel: 'stable'
    
    - name: Get dependencies
      run: flutter pub get
    
    - name: Build iOS (no signing)
      run: flutter build ios --release --no-codesign
    
    - name: Upload iOS build
      uses: actions/upload-artifact@v4
      with:
        name: ios-build
        path: build/ios/iphoneos/Runner.app