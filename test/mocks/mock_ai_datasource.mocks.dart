// Mocks generated by Mockito 5.4.6 from annotations
// in artifex/test/mocks/mock_ai_datasource.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:artifex/features/ai_transformation/data/datasources/ai_transformation_remote_datasource.dart'
    as _i5;
import 'package:artifex/features/ai_transformation/data/datasources/openai_api_client.dart'
    as _i8;
import 'package:artifex/features/ai_transformation/data/models/openai_image_request.dart'
    as _i9;
import 'package:artifex/features/ai_transformation/data/models/openai_image_response.dart'
    as _i3;
import 'package:artifex/features/ai_transformation/data/models/openai_models_response.dart'
    as _i4;
import 'package:artifex/features/ai_transformation/data/models/transformation_request_model.dart'
    as _i7;
import 'package:artifex/features/ai_transformation/data/models/transformation_result_model.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTransformationResultModel_0 extends _i1.SmartFake
    implements _i2.TransformationResultModel {
  _FakeTransformationResultModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeOpenAIImageResponse_1 extends _i1.SmartFake
    implements _i3.OpenAIImageResponse {
  _FakeOpenAIImageResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeOpenAIModelsResponse_2 extends _i1.SmartFake
    implements _i4.OpenAIModelsResponse {
  _FakeOpenAIModelsResponse_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AITransformationRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAITransformationRemoteDataSource extends _i1.Mock
    implements _i5.AITransformationRemoteDataSource {
  MockAITransformationRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.TransformationResultModel> transformPhoto(
    _i7.TransformationRequestModel? request,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#transformPhoto, [request]),
            returnValue: _i6.Future<_i2.TransformationResultModel>.value(
              _FakeTransformationResultModel_0(
                this,
                Invocation.method(#transformPhoto, [request]),
              ),
            ),
          )
          as _i6.Future<_i2.TransformationResultModel>);

  @override
  _i6.Future<bool> checkServiceHealth() =>
      (super.noSuchMethod(
            Invocation.method(#checkServiceHealth, []),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);
}

/// A class which mocks [OpenAIApiClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockOpenAIApiClient extends _i1.Mock implements _i8.OpenAIApiClient {
  MockOpenAIApiClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i3.OpenAIImageResponse> generateImage(
    _i9.OpenAIImageRequest? request,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#generateImage, [request]),
            returnValue: _i6.Future<_i3.OpenAIImageResponse>.value(
              _FakeOpenAIImageResponse_1(
                this,
                Invocation.method(#generateImage, [request]),
              ),
            ),
          )
          as _i6.Future<_i3.OpenAIImageResponse>);

  @override
  _i6.Future<_i4.OpenAIModelsResponse> getModels() =>
      (super.noSuchMethod(
            Invocation.method(#getModels, []),
            returnValue: _i6.Future<_i4.OpenAIModelsResponse>.value(
              _FakeOpenAIModelsResponse_2(
                this,
                Invocation.method(#getModels, []),
              ),
            ),
          )
          as _i6.Future<_i4.OpenAIModelsResponse>);
}
