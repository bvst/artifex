// Mocks generated by Mockito 5.4.6 from annotations
// in artifex/test/mocks/mock_photo_datasource.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:artifex/features/photo_capture/data/datasources/photo_local_datasource.dart'
    as _i3;
import 'package:artifex/features/photo_capture/data/models/photo_model.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePhotoModel_0 extends _i1.SmartFake implements _i2.PhotoModel {
  _FakePhotoModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [PhotoLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPhotoLocalDataSource extends _i1.Mock
    implements _i3.PhotoLocalDataSource {
  MockPhotoLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.PhotoModel> capturePhoto() =>
      (super.noSuchMethod(
            Invocation.method(#capturePhoto, []),
            returnValue: _i4.Future<_i2.PhotoModel>.value(
              _FakePhotoModel_0(this, Invocation.method(#capturePhoto, [])),
            ),
          )
          as _i4.Future<_i2.PhotoModel>);

  @override
  _i4.Future<_i2.PhotoModel> pickImageFromGallery() =>
      (super.noSuchMethod(
            Invocation.method(#pickImageFromGallery, []),
            returnValue: _i4.Future<_i2.PhotoModel>.value(
              _FakePhotoModel_0(
                this,
                Invocation.method(#pickImageFromGallery, []),
              ),
            ),
          )
          as _i4.Future<_i2.PhotoModel>);

  @override
  _i4.Future<List<_i2.PhotoModel>> getRecentPhotos({int? limit = 10}) =>
      (super.noSuchMethod(
            Invocation.method(#getRecentPhotos, [], {#limit: limit}),
            returnValue: _i4.Future<List<_i2.PhotoModel>>.value(
              <_i2.PhotoModel>[],
            ),
          )
          as _i4.Future<List<_i2.PhotoModel>>);

  @override
  _i4.Future<void> deletePhoto(String? photoId) =>
      (super.noSuchMethod(
            Invocation.method(#deletePhoto, [photoId]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i2.PhotoModel> savePhoto(_i2.PhotoModel? photo) =>
      (super.noSuchMethod(
            Invocation.method(#savePhoto, [photo]),
            returnValue: _i4.Future<_i2.PhotoModel>.value(
              _FakePhotoModel_0(this, Invocation.method(#savePhoto, [photo])),
            ),
          )
          as _i4.Future<_i2.PhotoModel>);
}
